package mirea.kvbo1.bichikov.practice7;

public class Main {
    public static void main(String[] args) {
        // Задание 4
        //Разработайте интерфейс MathCalculable, который содержит
        //объявления математических функций: возведения в степень и модуль
        //комплексного числа, также содержит число PI. Напишите класс MathFunc,
        //который реализует, реализует этот интерфейс. Например, вычисления длины
        //окружности, для чего используйте число PI из интерфейса. Протестируйте
        //класс
        System.out.println("Разработайте интерфейс MathCalculable, который содержит\nобъявления математических функций: возведения в степень и модуль\n" +
                "комплексного числа, также содержит число PI. Напишите класс MathFunc,\nкоторый реализует, реализует этот интерфейс. Например, вычисления длины\n" +
                "окружности, для чего используйте число PI из интерфейса. Протестируйте\nкласс");
        MathFunc m = new MathFunc();
        Complex c = new Complex(1,1);
        System.out.println(m.abs(c));
        System.out.println(m.circlePerimeter(1));
        System.out.println(m.circleArea(1));
        // Задание 5
        //Разработайте интерфейс для работы со строками, который содержит
        //а) функции подсчета символов в строке б) функция возвращает строку, которая
        //образовывает строку, состоящую из символов исходной строки s, которые
        //размещены на нечетных позициях: 1, 3, 5, ...в) функцию инвертирования строки
        System.out.println("Разработайте интерфейс для работы со строками, который содержит\nа) функции подсчета символов в строке б) функция возвращает строку, которая\n" +
                "образовывает строку, состоящую из символов исходной строки s, которые\nразмещены на нечетных позициях: 1, 3, 5, ...в) функцию инвертирования строки");
        ProcessString ps = new ProcessString();
        System.out.println(ps.countSymbols("123"));
        System.out.println(ps.countSymbols("123"));
        System.out.println(ps.invertString("123"));
    }
}
